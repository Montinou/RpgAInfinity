name: Deploy to Vercel

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: |
          npm run lint
          npm run type-check
          npm run test

      - name: Build application
        run: npm run build
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          KV_URL: ${{ secrets.KV_URL }}
          KV_REST_API_URL: ${{ secrets.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ secrets.KV_REST_API_TOKEN }}
          NEXT_PUBLIC_APP_NAME: 'RpgAInfinity'
          NEXT_PUBLIC_APP_VERSION: '1.0.0'

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

  post-deploy-tests:
    name: Post-Deploy Validation
    runs-on: ubuntu-latest
    needs: [deploy]
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Wait for deployment to be ready
        run: sleep 60

      - name: Run smoke tests on production
        run: |
          echo "Running smoke tests on production deployment"
          # Add production smoke test commands here
          # npx playwright test --config=playwright.config.production.ts

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful and validated"
          # Add notification logic here (Slack, Discord, etc.)

      - name: Notify deployment failure  
        if: failure()
        run: |
          echo "❌ Post-deployment validation failed"
          # Add failure notification logic here